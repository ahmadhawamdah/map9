{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/app/api/delete/route.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { NextResponse } from \"next/server\";\n\nconst prisma = new PrismaClient();\n\nexport async function DELETE() {\n  try {\n    // Drop the specified table\n    await prisma.$executeRawUnsafe(`DROP TABLE IF EXISTS \"Structure\";`); // Replace 'Structure' with your actual table name\n\n    // Return a success response\n    return NextResponse.json(\n      { message: \"The table has been dropped successfully.\" },\n      { status: 200 }\n    );\n  } catch (error) {\n    console.error(\"Error dropping the table:\", error);\n\n    // Return an error response\n    return NextResponse.json(\n      { error: \"Failed to drop the table.\" },\n      { status: 500 }\n    );\n  } finally {\n    // Disconnect the Prisma client\n    await prisma.$disconnect();\n  }\n}\n\nexport async function GET() {\n  // Handle invalid methods\n  return NextResponse.json(\n    { error: \"Method GET not allowed.\" },\n    { status: 405 }\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,2GAAA,CAAA,eAAY;AAExB,eAAe;IACpB,IAAI;QACF,2BAA2B;QAC3B,MAAM,OAAO,iBAAiB,CAAC,CAAC,iCAAiC,CAAC,GAAG,kDAAkD;QAEvH,4BAA4B;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAA2C,GACtD;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAE3C,2BAA2B;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,+BAA+B;QAC/B,MAAM,OAAO,WAAW;IAC1B;AACF;AAEO,eAAe;IACpB,yBAAyB;IACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;QAAE,OAAO;IAA0B,GACnC;QAAE,QAAQ;IAAI;AAElB"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}