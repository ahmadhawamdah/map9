{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/app/api/bridge-info/%5BstructureNumber%5D/route.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { NextResponse } from \"next/server\";\n\nconst prisma = new PrismaClient();\n\nexport async function GET(\n  req: Request,\n  { params }: { params: { structureNumber: string } }\n) {\n  const { structureNumber } = await params;\n\n  if (!structureNumber) {\n    return NextResponse.json(\n      { error: \"Structure number is required\" },\n      { status: 400 }\n    );\n  }\n\n  try {\n    const bridgeData = await prisma.bridge.findUnique({\n      where: {\n        structureNumber,\n      },\n      include: {\n        navigation: true,\n        conditon: true,\n        maintenance: true,\n        geometry: true,\n        Structure: true,\n      },\n    });\n\n    if (!bridgeData) {\n      return NextResponse.json({ error: \"Bridge not found\" }, { status: 404 });\n    }\n    console.log(bridgeData);\n    return NextResponse.json(bridgeData, { status: 200 });\n  } catch (error) {\n    console.error(\"Error fetching bridge data:\", error);\n    return NextResponse.json(\n      { error: \"Internal Server Error\" },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,2GAAA,CAAA,eAAY;AAExB,eAAe,IACpB,GAAY,EACZ,EAAE,MAAM,EAA2C;IAEnD,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM;IAElC,IAAI,CAAC,iBAAiB;QACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA+B,GACxC;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;QACF,MAAM,aAAa,MAAM,OAAO,MAAM,CAAC,UAAU,CAAC;YAChD,OAAO;gBACL;YACF;YACA,SAAS;gBACP,YAAY;gBACZ,UAAU;gBACV,aAAa;gBACb,UAAU;gBACV,WAAW;YACb;QACF;QAEA,IAAI,CAAC,YAAY;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QACxE;QACA,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YAAE,QAAQ;QAAI;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}