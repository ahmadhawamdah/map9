{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/Button.tsx"],"sourcesContent":["\"use client\"\nimport React from \"react\";\n\ntype ButtonProps = {\n  label: string;\n  onClick?: () => void;\n  variant?: \"primary\" | \"secondary\" | \"outline\";\n  disabled?: boolean;\n  type?: \"submit\" | \"reset\" | \"button\" | undefined;\n};\n\nconst Button: React.FC<ButtonProps> = ({ label, onClick, variant = \"primary\", disabled = false, type }) => {\n  const baseStyles = \"px-4 py-2 rounded font-medium focus:outline-none\";\n  const variants = {\n    primary: \"bg-white border-2 h-12 hover:border-none text-black hover:bg-yellow-400 hover:text-black hover:scale-110 disabled:bg-blue-300 ease-in-out transition delay-50 cursor-pointerease-in-out transition delay-50 cursor-pointer w-30  w-36\",\n    secondary: \"bg-gray-500 text-white hover:bg-gray-600 disabled:bg-gray-300\",\n    outline: \"border border-gray-500 text-gray-500 hover:bg-gray-100 disabled:border-gray-300 disabled:text-gray-300\",\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      className={`${baseStyles} ${variants[variant]}`}\n      type = {type}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,SAAgC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,SAAS,EAAE,WAAW,KAAK,EAAE,IAAI,EAAE;IACpG,MAAM,aAAa;IACnB,MAAM,WAAW;QACf,SAAS;QACT,WAAW;QACX,SAAS;IACX;IAEA,qBACE,6LAAC;QACC,SAAS;QACT,UAAU;QACV,WAAW,GAAG,WAAW,CAAC,EAAE,QAAQ,CAAC,QAAQ,EAAE;QAC/C,MAAQ;kBAEP;;;;;;AAGP;KAlBM;uCAoBS"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/structureNum.ts"],"sourcesContent":["export function transformStructureNum(input: string): string | number {\n  // Check for any digits\n  if (/[^0-9]/.test(input)) {\n    return input; // return str\n  } else {\n    return parseInt(input, 10); // return int\n  }\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,sBAAsB,KAAa;IACjD,uBAAuB;IACvB,IAAI,SAAS,IAAI,CAAC,QAAQ;QACxB,OAAO,OAAO,aAAa;IAC7B,OAAO;QACL,OAAO,SAAS,OAAO,KAAK,aAAa;IAC3C;AACF"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/trimQuotes.ts"],"sourcesContent":["export function trimQuotes(input: string): string {\n  return input.replace(/^['\"]|['\"]$/g, \"\");\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,KAAa;IACtC,OAAO,MAAM,OAAO,CAAC,gBAAgB;AACvC"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/BridgeList.tsx"],"sourcesContent":["import React from \"react\";\nimport { Bridge } from \"../../typing\"; // Ensure correct path to typing file\nimport { transformStructureNum } from \"@/utils/structureNum\";\nimport { trimQuotes } from \"@/utils/trimQuotes\";\ninterface BridgeListProps {\n  bridges: Bridge[];\n}\n\nconst BridgeList: React.FC<BridgeListProps> = ({ bridges }) => {\n\n  return (\n    <div className=\"p-4 bg-white shadow-md rounded-md space-y-4 text-black\">\n      <h2 className=\"text-xl font-semibold\">Bridges List</h2>\n      {bridges.map((bridge) => (\n        <div key={bridge.structureNumber} className=\"border p-2 rounded-md  hover:scale-105 transition-all ease-in-out cursor-pointer\">\n          <h3 className=\"font-bold\">Structure {transformStructureNum(bridge.structureNumber)}</h3>\n          <p>{trimQuotes(bridge.location)}</p>\n          <p>Year Built: {bridge.yearBuilt}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BridgeList;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;AAKA,MAAM,aAAwC,CAAC,EAAE,OAAO,EAAE;IAExD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;YACrC,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC;oBAAiC,WAAU;;sCAC1C,6LAAC;4BAAG,WAAU;;gCAAY;gCAAW,CAAA,GAAA,+HAAA,CAAA,wBAAqB,AAAD,EAAE,OAAO,eAAe;;;;;;;sCACjF,6LAAC;sCAAG,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;;;;;;sCAC9B,6LAAC;;gCAAE;gCAAa,OAAO,SAAS;;;;;;;;mBAHxB,OAAO,eAAe;;;;;;;;;;;AAQxC;KAdM;uCAgBS"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/TextInput.tsx"],"sourcesContent":["import { describe } from \"node:test\";\nimport React, { ChangeEvent } from \"react\";\n\ntype TextInputProps = {\n  label: string;\n  placeholder: string;\n  value: any;\n  onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  description?: string;\n};\n\nconst TextInput: React.FC<TextInputProps> = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  description\n}) => {\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <label className=\"text-gray-600 font-medium\">{label}</label>\n      <div className=\"relative\">\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          className=\"outline-none px-4 py-2 w-full border border-gray-300 rounded focus:ring-2 focus:ring-black text-black\"\n        />\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n"],"names":[],"mappings":";;;;;AAWA,MAAM,YAAsC,CAAC,EAC3C,KAAK,EACL,WAAW,EACX,KAAK,EACL,QAAQ,EACR,WAAW,EACZ;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAU;0BAA6B;;;;;;0BAC9C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,MAAK;wBACL,aAAa;wBACb,OAAO;wBACP,UAAU;wBACV,WAAU;;;;;;kCAEZ,6LAAC;kCAAG;;;;;;;;;;;;;;;;;;AAIZ;KAtBM;uCAwBS"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/RangeInput.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\n\ntype RangeInputProps = {\n  label: string;\n  value: { min: number; max: number };\n  onChange: (value: { min: number; max: number }) => void;\n  min?: number;\n  max?: number;\n};\n\nconst RangeInput: React.FC<RangeInputProps> = ({\n  label,\n  value,\n  onChange,\n  min = 0,\n  max,\n}) => {\n  const handleMinChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const min = parseInt(e.target.value, 10) || 0;\n    onChange({ ...value, min });\n  };\n\n  const handleMaxChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const max = parseInt(e.target.value, 10) || 0;\n    onChange({ ...value, max });\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <label className=\"text-gray-600 font-medium\">{label}</label>\n      <div className=\"grid grid-cols-2 gap-4\">\n        <input\n          min={min}\n          type=\"number\"\n          placeholder=\"Min\"\n          value={value.min}\n          onChange={handleMinChange}\n          className=\"outline-none px-4 py-2 w-full border border-gray-300 rounded focus:ring-2 focus:ring-black text-black\"\n        />\n        <input\n          max={max}\n          type=\"number\"\n          placeholder=\"Max\"\n          value={value.max}\n          onChange={handleMaxChange}\n          className=\"outline-none px-4 py-2 w-full border border-gray-300 rounded focus:ring-2 focus:ring-black text-black\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RangeInput;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,aAAwC,CAAC,EAC7C,KAAK,EACL,KAAK,EACL,QAAQ,EACR,MAAM,CAAC,EACP,GAAG,EACJ;IACC,MAAM,kBAAkB,CAAC;QACvB,MAAM,MAAM,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO;QAC5C,SAAS;YAAE,GAAG,KAAK;YAAE;QAAI;IAC3B;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,MAAM,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO;QAC5C,SAAS;YAAE,GAAG,KAAK;YAAE;QAAI;IAC3B;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAU;0BAA6B;;;;;;0BAC9C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,KAAK;wBACL,MAAK;wBACL,aAAY;wBACZ,OAAO,MAAM,GAAG;wBAChB,UAAU;wBACV,WAAU;;;;;;kCAEZ,6LAAC;wBACC,KAAK;wBACL,MAAK;wBACL,aAAY;wBACZ,OAAO,MAAM,GAAG;wBAChB,UAAU;wBACV,WAAU;;;;;;;;;;;;;;;;;;AAKpB;KAxCM;uCA0CS"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/reverseMap.ts"],"sourcesContent":["// Reverse mapping: from service name to its integer key\nexport const reverseMap = (map: { [key: string]: string }) => {\n  return Object.entries(map).reduce((acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  }, {} as { [key: string]: string });\n};\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;AACjD,MAAM,aAAa,CAAC;IACzB,OAAO,OAAO,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,MAAM;QAClD,GAAG,CAAC,MAAM,GAAG;QACb,OAAO;IACT,GAAG,CAAC;AACN"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/filter-files/FilterBridge.tsx"],"sourcesContent":["import React from \"react\";\nimport TextInput from \"@/ui/TextInput\";\nimport Dropdown from \"@/ui/DropDown\";\nimport RangeInput from \"@/ui/RangeInput\";\nimport { reverseMap } from \"@/utils/reverseMap\";\n\ninterface FilterBridgesParams {\n  filterParams: {\n    location: number | string;\n    yearBuilt: { min: number; max: number };\n    yearReconstructed: { min: number; max: number };\n    fedAgency: string;\n    serviceOn: number | null;\n    routePrefix: number;\n  };\n  handleFilterChange: (key: string, value: any) => void;\n}\n\nconst serviceMap: Record<string, string> = {\n  \"1\": \"Highway, with or without pedestrian\",\n  \"2\": \"Railroad\",\n  \"3\": \"Pedestrian-bicycle\",\n  \"4\": \"Highway-railroad\",\n  \"5\": \"Waterway\",\n  \"6\": \"Highway-waterway\",\n  \"7\": \"Railroad-waterway\",\n  \"8\": \"Highway-waterway-railroad\",\n  \"9\": \"Relief for waterway\",\n  \"0\": \"Other\",\n};\n\nconst highwayMap: Record<string, string> = {\n  \"1\": \"Interstate highway\",\n  \"2\": \"U.S. numbered highway\",\n  \"3\": \"State highway\",\n  \"4\": \"County highway\",\n  \"5\": \"City street\",\n  \"6\": \"Federal lands road\",\n  \"7\": \"State lands road\",\n  \"8\": \"Other (include toll roads not otherwise)\",\n};\n\nconst FilterBridge: React.FC<FilterBridgesParams> = ({\n  filterParams,\n  handleFilterChange,\n}) => {\n  const reverseServiceMap = reverseMap(serviceMap);\n  const reverseHighwayMap = reverseMap(highwayMap);\n\n  return (\n    <div className=\"grid grid-cols-3 gap-4\">\n      <TextInput\n        label=\"Location\"\n        placeholder=\"Enter State Code\"\n        value={filterParams.location}\n        onChange={(e) => handleFilterChange(\"stateCode\", e.target.value)}\n      />\n      <RangeInput\n        label=\"Year Built\"\n        value={filterParams.yearBuilt}\n        onChange={(value) => handleFilterChange(\"yearBuilt\", value)}\n        min = {1697}\n        max = {2021}\n      />\n      <RangeInput\n        label=\"Year Reconstructed\"\n        value={filterParams.yearReconstructed}\n        onChange={(value) => handleFilterChange(\"yearReconstructed\", value)}\n        min = {0}\n        max = {2021}\n      />\n      <Dropdown\n        label=\"Federal Agency\"\n        options={[\"Y\", \"N\"]}\n        selected={filterParams.fedAgency}\n        onSelect={(value) => {\n          handleFilterChange(\"fedAgency\", value);\n        }}\n      />\n      <Dropdown\n        label=\"Highway\"\n        options={Object.values(highwayMap)} // Dropdown options\n        selected={highwayMap[String(filterParams.routePrefix)]} // Safely convert routePrefix to string\n        onSelect={(value) => {\n          const selectedKey = reverseHighwayMap[value]; // Get key from value\n          handleFilterChange(\"routePrefix\", parseInt(selectedKey, 10)); // Parse key back to number\n        }}\n      />\n      <Dropdown\n        label=\"Service\"\n        options={Object.values(serviceMap)} // Dropdown options\n        selected={serviceMap[String(filterParams.serviceOn)]} // Safely convert serviceOn to string\n        onSelect={(value) => {\n          const selectedKey = reverseServiceMap[value]; // Get key from value\n          handleFilterChange(\"serviceOn\", parseInt(selectedKey, 10)); // Parse key back to number\n        }}\n      />\n    </div>\n  );\n};\n\nexport default FilterBridge;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAcA,MAAM,aAAqC;IACzC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,MAAM,aAAqC;IACzC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,MAAM,eAA8C,CAAC,EACnD,YAAY,EACZ,kBAAkB,EACnB;IACC,MAAM,oBAAoB,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE;IACrC,MAAM,oBAAoB,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE;IAErC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0HAAA,CAAA,UAAS;gBACR,OAAM;gBACN,aAAY;gBACZ,OAAO,aAAa,QAAQ;gBAC5B,UAAU,CAAC,IAAM,mBAAmB,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;0BAEjE,6LAAC,2HAAA,CAAA,UAAU;gBACT,OAAM;gBACN,OAAO,aAAa,SAAS;gBAC7B,UAAU,CAAC,QAAU,mBAAmB,aAAa;gBACrD,KAAO;gBACP,KAAO;;;;;;0BAET,6LAAC,2HAAA,CAAA,UAAU;gBACT,OAAM;gBACN,OAAO,aAAa,iBAAiB;gBACrC,UAAU,CAAC,QAAU,mBAAmB,qBAAqB;gBAC7D,KAAO;gBACP,KAAO;;;;;;0BAET,6LAAC,yHAAA,CAAA,UAAQ;gBACP,OAAM;gBACN,SAAS;oBAAC;oBAAK;iBAAI;gBACnB,UAAU,aAAa,SAAS;gBAChC,UAAU,CAAC;oBACT,mBAAmB,aAAa;gBAClC;;;;;;0BAEF,6LAAC,yHAAA,CAAA,UAAQ;gBACP,OAAM;gBACN,SAAS,OAAO,MAAM,CAAC;gBACvB,UAAU,UAAU,CAAC,OAAO,aAAa,WAAW,EAAE;gBACtD,UAAU,CAAC;oBACT,MAAM,cAAc,iBAAiB,CAAC,MAAM,EAAE,qBAAqB;oBACnE,mBAAmB,eAAe,SAAS,aAAa,MAAM,2BAA2B;gBAC3F;;;;;;0BAEF,6LAAC,yHAAA,CAAA,UAAQ;gBACP,OAAM;gBACN,SAAS,OAAO,MAAM,CAAC;gBACvB,UAAU,UAAU,CAAC,OAAO,aAAa,SAAS,EAAE;gBACpD,UAAU,CAAC;oBACT,MAAM,cAAc,iBAAiB,CAAC,MAAM,EAAE,qBAAqB;oBACnE,mBAAmB,aAAa,SAAS,aAAa,MAAM,2BAA2B;gBACzF;;;;;;;;;;;;AAIR;KAzDM;uCA2DS"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/filter-files/FilterCondition.tsx"],"sourcesContent":["import React from \"react\";\nimport Dropdown from \"@/ui/DropDown\";\nimport RangeInput from \"@/ui/RangeInput\";\nimport { reverseMap } from \"@/utils/reverseMap\";\n\ninterface FilterConditionsProps {\n  filterParams: {\n    bridgeCondition: string;\n    deckCondition: string;\n    superstructureCondition: string;\n    substructureCondition: string;\n    channelCondition: string;\n    culvertCondition: string;\n    structuralEval: string;\n    deckGeometryEval: string;\n    underClearanceEval: string;\n    waterwayEval: string;\n    apprRoadEval: { min: number; max: number };\n    postingEval: { min: number; max: number };\n    lowestRating: { min: number; max: number };\n  };\n  handleFilterChange: (key: string, value: any) => void;\n}\n\n// Condition maps\nconst conditionMap: Record<number | string, string> = {\n  \"N\": \"NOT APPLICABLE\",\n  \"9\": \"EXCELLENT\",\n  \"8\": \"VERY GOOD\",\n  \"7\": \"GOOD\",\n  \"6\": \"SATISFACTORY\",\n  \"5\": \"FAIR\",\n  \"4\": \"POOR\",\n  \"3\": \"SERIOUS\",\n  \"2\": \"CRITICAL\",\n  \"1\": '\"IMMINENT\" FAILURE',\n  \"0\": \"FAILED\",\n};\n\nconst overallConditionMap: Record<number | string, string> = {\n  \"F\": \"FAIR\",\n  \"G\": \"GOOD\",\n  \"P\": \"POOR\",\n};\n\n// Reverse maps\nconst reverseConditionMap = reverseMap(conditionMap);\nconst reverseOverallConditionMap = reverseMap(overallConditionMap);\n\nconst FilterCondition: React.FC<FilterConditionsProps> = ({\n  filterParams,\n  handleFilterChange,\n}) => {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n    {/* Condition Columns */}\n    <div className=\"grid grid-cols-2 gap-2\">\n      {/* Bridge Condition */}\n      <Dropdown\n        label=\"Bridge Condition\"\n        options={Object.values(overallConditionMap)}\n        selected={overallConditionMap[filterParams.bridgeCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseOverallConditionMap[value];\n          handleFilterChange(\"bridgeCondition\", selectedKey);\n        }}\n      />\n  \n      {/* Deck Condition */}\n      <Dropdown\n        label=\"Deck Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.deckCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"deckCondition\", selectedKey);\n        }}\n      />\n  \n      {/* Superstructure Condition */}\n      <Dropdown\n        label=\"Superstructure Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.superstructureCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"superstructureCondition\", selectedKey);\n        }}\n      />\n  \n      {/* Substructure Condition */}\n      <Dropdown\n        label=\"Substructure Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.substructureCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"substructureCondition\", selectedKey);\n        }}\n      />\n  \n      {/* Channel Condition */}\n      <Dropdown\n        label=\"Channel Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.channelCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"channelCondition\", selectedKey);\n        }}\n      />\n  \n      {/* Culvert Condition */}\n      <Dropdown\n        label=\"Culvert Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.culvertCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"culvertCondition\", selectedKey);\n        }}\n      />\n    </div>\n  \n    {/* Evaluation Columns */}\n    <div className=\"grid grid-cols-2 gap-2 space\">\n      {/* Structural Evaluation */}\n      <Dropdown\n        label=\"Structural Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.structuralEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"structuralEval\", selectedKey);\n        }}\n      />\n  \n      {/* Deck Geometry Evaluation */}\n      <Dropdown\n        label=\"Deck Geometry Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.deckGeometryEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"deckGeometryEval\", selectedKey);\n        }}\n      />\n  \n      {/* Under Clearance Evaluation */}\n      <Dropdown\n        label=\"Under Clearance Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.underClearanceEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"underClearanceEval\", selectedKey);\n        }}\n      />\n  \n      {/* Waterway Evaluation */}\n      <Dropdown\n        label=\"Waterway Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.waterwayEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"waterwayEval\", selectedKey);\n        }}\n      />\n  \n      {/* Range Inputs */}\n      <RangeInput\n        label=\"Approach Road Evaluation\"\n        value={filterParams.apprRoadEval}\n        onChange={(value) => handleFilterChange(\"apprRoadEval\", value)}\n        min={0}\n        max={8}\n      />\n      <RangeInput\n        label=\"Posting Evaluation\"\n        value={filterParams.postingEval}\n        onChange={(value) => handleFilterChange(\"postingEval\", value)}\n        min={0}\n        max={5}\n      />\n      {/* <RangeInput\n        label=\"Lowest Rating\"\n        value={filterParams.lowestRating}\n        onChange={(value) => handleFilterChange(\"lowestRating\", value)}\n        min={0}\n        max={9}\n      /> */}\n    </div>\n  </div>\n  );\n};\n\nexport default FilterCondition;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/Map9.tsx"],"sourcesContent":["\"use client\";\n\nimport Button from \"@/ui/Button\";\nimport React, { useState } from \"react\";\nimport BridgeList from \"./BridgeList\";\nimport { Bridge, FilterBridgesParams, FilterConditionsParams } from \"../../typing\";\n// import FilterBridge from \"./filter-files/FilterBridge\";\nimport FilterCondition from \"./filter-files/FilterCondition\";\nimport FilterBridge from \"./filter-files/FilterBridge\";\n\ninterface Map9Props {\n  type: \"bridge\" | \"condition\";\n  filterParams: FilterBridgesParams | FilterConditionsParams;\n  handleFilterChange: (key: string, value: any) => void;\n}\n\nconst Map9: React.FC<Map9Props> = ({ type, filterParams, handleFilterChange }) => {\n  const [filteredResults, setFilteredResults] = useState<Bridge[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleApplyFilters = async () => {\n    try {\n      setLoading(true);\n\n      const res = await fetch(`/api/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterParams),\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n\n      const data: Bridge[] = await res.json();\n      setFilteredResults(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h2 className=\"text-xl font-semibold mb-4 text-black\">Filters</h2>\n        {type === \"bridge\" ? (\n          <FilterBridge\n            filterParams={filterParams as FilterBridgesParams}\n            handleFilterChange={handleFilterChange}\n          />\n        ) : (\n          <FilterCondition\n            filterParams={filterParams as FilterConditionsParams}\n            handleFilterChange={handleFilterChange}\n          />\n        )}\n        <div className=\"mt-6\">\n          <Button\n            onClick={handleApplyFilters}\n            label={loading ? \"Loading...\" : \"Apply Filters\"}\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <BridgeList bridges={filteredResults} />\n      </div>\n    </div>\n  );\n};\n\nexport default Map9;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA,0DAA0D;AAC1D;AACA;;;AARA;;;;;;AAgBA,MAAM,OAA4B,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,kBAAkB,EAAE;;IAC3E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,qBAAqB;QACzB,IAAI;YACF,WAAW;YAEX,MAAM,MAAM,MAAM,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE;gBACtC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAiB,MAAM,IAAI,IAAI;YACrC,mBAAmB;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;QACxC,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;;0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;oBACrD,SAAS,yBACR,6LAAC,wJAAA,CAAA,UAAY;wBACX,cAAc;wBACd,oBAAoB;;;;;6CAGtB,6LAAC,2JAAA,CAAA,UAAe;wBACd,cAAc;wBACd,oBAAoB;;;;;;kCAGxB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,uHAAA,CAAA,UAAM;4BACL,SAAS;4BACT,OAAO,UAAU,eAAe;;;;;;;;;;;;;;;;;0BAKtC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mIAAA,CAAA,UAAU;oBAAC,SAAS;;;;;;;;;;;;;;;;;AAI7B;GAzDM;KAAA;uCA2DS"}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/app/%28dashboard%29/condition/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport Map9 from \"@/components/Map9\";\nimport { FilterConditionsParams } from \"../../../../typing\";\n\nconst ConditionDashboard: React.FC = () => {\n  const [conditionFilterParams, setConditionFilterParams] = useState<FilterConditionsParams>({\n    bridgeCondition: \"\",\n    deckCondition: \"\",\n    superstructureCondition: \"\",\n    substructureCondition: \"\",\n    channelCondition: \"\",\n    culvertCondition: \"\",\n    structuralEval: \"\",\n    deckGeometryEval: \"\",\n    underClearanceEval: \"\",\n    waterwayEval: \"\",\n    apprRoadEval: { min: 0, max: 8 },\n    postingEval: { min: 0, max: 5 },\n    lowestRating: { min: 0, max: 9 },\n  });\n\n\n  const handleFilterChange = (key: string, value: any) => {\n    setConditionFilterParams((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n\n  return (\n    <div>\n      <Map9\n        type=\"condition\"\n        filterParams={conditionFilterParams}\n        handleFilterChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default ConditionDashboard;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMA,MAAM,qBAA+B;;IACnC,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B;QACzF,iBAAiB;QACjB,eAAe;QACf,yBAAyB;QACzB,uBAAuB;QACvB,kBAAkB;QAClB,kBAAkB;QAClB,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;QACpB,cAAc;QACd,cAAc;YAAE,KAAK;YAAG,KAAK;QAAE;QAC/B,aAAa;YAAE,KAAK;YAAG,KAAK;QAAE;QAC9B,cAAc;YAAE,KAAK;YAAG,KAAK;QAAE;IACjC;IAGA,MAAM,qBAAqB,CAAC,KAAa;QACvC,yBAAyB,CAAC,OAAS,CAAC;gBAClC,GAAG,IAAI;gBACP,CAAC,IAAI,EAAE;YACT,CAAC;IACH;IAGA,qBACE,6LAAC;kBACC,cAAA,6LAAC,6HAAA,CAAA,UAAI;YACH,MAAK;YACL,cAAc;YACd,oBAAoB;;;;;;;;;;;AAI5B;GAnCM;KAAA;uCAqCS"}},
    {"offset": {"line": 880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}