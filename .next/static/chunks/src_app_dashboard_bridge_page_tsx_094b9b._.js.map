{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/app/dashboard/bridge/page.tsx"],"sourcesContent":["\"use client\";\n\nimport FilterBridges from \"@/components/filter-files/FilterBridges\";\nimport Button from \"@/ui/Button\";\nimport React, { useState } from \"react\";\nimport { Bridge } from \"../../../../typing\";\nimport BridgeList from \"@/components/BridgeList\";\n\n\ninterface FilterParams {\n  stateCode: number | string;\n  yearBuilt: { min: number; max: number };\n  functionalClass:  { min: number; max: number };\n  designLoad: string;\n}\n\nconst Bridges: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [filterParams, setFilterParams] = useState<FilterParams>({\n    stateCode: \"\",\n    yearBuilt: { min: 1967, max: 2024 },\n    functionalClass:{ min: 0, max: 20 },\n    designLoad: \"\",\n  });\n\n  const [filteredBridges, setFilteredBridges] = useState<Bridge[]>([]);\n\n  const handleFilterChange = (key: string, value: any) => {\n    setFilterParams((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  const handleApplyFilters = async () => {\n    try {\n      setLoading(true);\n      const res = await fetch(\"/api/bridges\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterParams),\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch bridges\");\n      }\n\n      const data: Bridge[] = await res.json();\n      setFilteredBridges(data);\n    } catch (error) {\n      console.error(\"Error fetching bridges:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6 text-black\">Bridge Dashboard</h1>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h2 className=\"text-xl font-semibold mb-4 text-black\">Filters</h2>\n        <FilterBridges filterParams={filterParams} handleFilterChange={handleFilterChange} />\n        <div className=\"mt-6\">\n          <Button\n            onClick={handleApplyFilters}\n            label={loading ? \"Loading...\" : \"Apply Filters\"}\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <BridgeList bridges={filteredBridges as Bridge[]} />\n        {/* <Map bridges={filteredBridges} /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Bridges;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;;;AANA;;;;;AAgBA,MAAM,UAAoB;;IACxB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;QAC7D,WAAW;QACX,WAAW;YAAE,KAAK;YAAM,KAAK;QAAK;QAClC,iBAAgB;YAAE,KAAK;YAAG,KAAK;QAAG;QAClC,YAAY;IACd;IAEA,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnE,MAAM,qBAAqB,CAAC,KAAa;QACvC,gBAAgB,CAAC,OAAS,CAAC;gBACzB,GAAG,IAAI;gBACP,CAAC,IAAI,EAAE;YACT,CAAC;IACH;IAEA,MAAM,qBAAqB;QACzB,IAAI;YACF,WAAW;YACX,MAAM,MAAM,MAAM,MAAM,gBAAgB;gBACtC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAiB,MAAM,IAAI,IAAI;YACrC,mBAAmB;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;QAC3C,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAqC;;;;;;0BAEnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;kCACtD,6LAAC,yJAAA,CAAA,UAAa;wBAAC,cAAc;wBAAc,oBAAoB;;;;;;kCAC/D,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,uHAAA,CAAA,UAAM;4BACL,SAAS;4BACT,OAAO,UAAU,eAAe;;;;;;;;;;;;;;;;;0BAKtC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mIAAA,CAAA,UAAU;oBAAC,SAAS;;;;;;;;;;;;;;;;;AAK7B;GA/DM;KAAA;uCAiES"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}