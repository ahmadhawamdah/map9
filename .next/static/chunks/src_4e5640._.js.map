{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/Button.tsx"],"sourcesContent":["\"use client\"\nimport React from \"react\";\n\ntype ButtonProps = {\n  label: string;\n  onClick?: () => void;\n  disabled?: boolean;\n  type?: \"submit\" | \"reset\" | \"button\" | undefined;\n};\n\nconst Button: React.FC<ButtonProps> = ({ label, onClick, disabled = false, type }) => {\n  const baseStyles = \"px-4 py-2 rounded font-medium focus:outline-none\";\n  const variant = \"bg-white border-2 h-12 hover:border-none text-black hover:bg-yellow-400 hover:text-black hover:scale-110 disabled:bg-blue-300 ease-in-out transition delay-50 cursor-pointerease-in-out transition delay-50 cursor-pointer w-30  w-36\";\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled}\n      className={`${baseStyles} ${variant}`}\n      type = {type}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;"],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,SAAgC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,KAAK,EAAE,IAAI,EAAE;IAC/E,MAAM,aAAa;IACnB,MAAM,UAAU;IAEhB,qBACE,6LAAC;QACC,SAAS;QACT,UAAU;QACV,WAAW,GAAG,WAAW,CAAC,EAAE,SAAS;QACrC,MAAQ;kBAEP;;;;;;AAGP;KAdM;uCAgBS"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/structureNum.ts"],"sourcesContent":["export function transformStructureNum(input: string): string | number {\n  // Check for any digits\n  if (/[^0-9]/.test(input)) {\n    return input; // return str\n  } else {\n    return parseInt(input, 10); // return int\n  }\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,sBAAsB,KAAa;IACjD,uBAAuB;IACvB,IAAI,SAAS,IAAI,CAAC,QAAQ;QACxB,OAAO,OAAO,aAAa;IAC7B,OAAO;QACL,OAAO,SAAS,OAAO,KAAK,aAAa;IAC3C;AACF"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/trimQuotes.ts"],"sourcesContent":["export function trimQuotes(input: string): string {\n  return input.replace(/^['\"]|['\"]$/g, \"\");\n}\n"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,KAAa;IACtC,OAAO,MAAM,OAAO,CAAC,gBAAgB;AACvC"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/BridgeList.tsx"],"sourcesContent":["import React from \"react\";\nimport { Bridge } from \"../../typing\";\nimport { transformStructureNum } from \"@/utils/structureNum\";\nimport { trimQuotes } from \"@/utils/trimQuotes\";\n\ninterface BridgeListProps {\n  bridges: Bridge[];\n  setSelectedStructureNumber: (value: string) => void;\n}\n\nconst BridgeList: React.FC<BridgeListProps> = ({\n  bridges,\n  setSelectedStructureNumber,\n}) => {\n  return (\n    <div className=\"p-5 pt-0 h-screen overflow-y-auto min-w-[270px] bg-white shadow-md rounded-md space-y-4 text-black\">\n      <h2 className=\"text-xl font-semibold sticky top-0 bg-white z-10 p-5 border-b border-b-gray-500 w-full\">\n        Bridges List\n      </h2>\n\n      {bridges && bridges.length > 0 ? (\n        bridges.map((bridge) => (\n          <div\n            key={bridge.structureNumber}\n            onClick={() => setSelectedStructureNumber(bridge.structureNumber)}\n            className=\"border p-2 rounded-md hover:scale-105 transition-all ease-in-out cursor-pointer\"\n          >\n            <h3 className=\"font-bold\">\n              Structure {transformStructureNum(bridge.structureNumber)}\n            </h3>\n            <p>{trimQuotes(bridge.location)}</p>\n            <p>Year Built: {bridge.yearBuilt}</p>\n          </div>\n        ))\n      ) : (\n        <p className=\"text-base text-gray-800\">\n          Click on \"Apply Filters\" to start\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default BridgeList;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;AAOA,MAAM,aAAwC,CAAC,EAC7C,OAAO,EACP,0BAA0B,EAC3B;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAyF;;;;;;YAItG,WAAW,QAAQ,MAAM,GAAG,IAC3B,QAAQ,GAAG,CAAC,CAAC,uBACX,6LAAC;oBAEC,SAAS,IAAM,2BAA2B,OAAO,eAAe;oBAChE,WAAU;;sCAEV,6LAAC;4BAAG,WAAU;;gCAAY;gCACb,CAAA,GAAA,+HAAA,CAAA,wBAAqB,AAAD,EAAE,OAAO,eAAe;;;;;;;sCAEzD,6LAAC;sCAAG,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;;;;;;sCAC9B,6LAAC;;gCAAE;gCAAa,OAAO,SAAS;;;;;;;;mBAR3B,OAAO,eAAe;;;;0CAY/B,6LAAC;gBAAE,WAAU;0BAA0B;;;;;;;;;;;;AAM/C;KA/BM;uCAiCS"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/RangeInput.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\n\ntype RangeInputProps = {\n  label: string;\n  value: { min: number; max: number };\n  onChange: (value: { min: number; max: number }) => void;\n  min?: number;\n  max?: number;\n};\n\nconst RangeInput: React.FC<RangeInputProps> = ({\n  label,\n  value,\n  onChange,\n  min = 0,\n  max,\n}) => {\n  const handleMinChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const min = parseInt(e.target.value, 10) || 0;\n    onChange({ ...value, min });\n  };\n\n  const handleMaxChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const max = parseInt(e.target.value, 10) || 0;\n    onChange({ ...value, max });\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <label className=\"text-gray-600 font-medium\">{label}</label>\n      <div className=\"grid grid-cols-2 gap-4\">\n        <input\n          min={min}\n          type=\"number\"\n          placeholder=\"Min\"\n          value={value.min}\n          onChange={handleMinChange}\n          className=\"outline-none px-4 py-2 w-full border border-gray-300 rounded focus:ring-2 focus:ring-black text-black\"\n        />\n        <input\n          max={max}\n          type=\"number\"\n          placeholder=\"Max\"\n          value={value.max}\n          onChange={handleMaxChange}\n          className=\"outline-none px-4 py-2 w-full border border-gray-300 rounded focus:ring-2 focus:ring-black text-black\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RangeInput;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,aAAwC,CAAC,EAC7C,KAAK,EACL,KAAK,EACL,QAAQ,EACR,MAAM,CAAC,EACP,GAAG,EACJ;IACC,MAAM,kBAAkB,CAAC;QACvB,MAAM,MAAM,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO;QAC5C,SAAS;YAAE,GAAG,KAAK;YAAE;QAAI;IAC3B;IAEA,MAAM,kBAAkB,CAAC;QACvB,MAAM,MAAM,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,OAAO;QAC5C,SAAS;YAAE,GAAG,KAAK;YAAE;QAAI;IAC3B;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAU;0BAA6B;;;;;;0BAC9C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,KAAK;wBACL,MAAK;wBACL,aAAY;wBACZ,OAAO,MAAM,GAAG;wBAChB,UAAU;wBACV,WAAU;;;;;;kCAEZ,6LAAC;wBACC,KAAK;wBACL,MAAK;wBACL,aAAY;wBACZ,OAAO,MAAM,GAAG;wBAChB,UAAU;wBACV,WAAU;;;;;;;;;;;;;;;;;;AAKpB;KAxCM;uCA0CS"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/reverseMap.ts"],"sourcesContent":["// Reverse mapping: from service name to its integer key\nexport const reverseMap = (map: { [key: string]: string }) => {\n  return Object.entries(map).reduce((acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  }, {} as { [key: string]: string });\n};\n"],"names":[],"mappings":"AAAA,wDAAwD;;;;AACjD,MAAM,aAAa,CAAC;IACzB,OAAO,OAAO,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,MAAM;QAClD,GAAG,CAAC,MAAM,GAAG;QACb,OAAO;IACT,GAAG,CAAC;AACN"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/NBIHashmaps.tsx"],"sourcesContent":["// Bridge\nconst serviceMap: Record<string, string> = {\n  \"1\": \"Highway, with or without pedestrian\",\n  \"2\": \"Railroad\",\n  \"3\": \"Pedestrian-bicycle\",\n  \"4\": \"Highway-railroad\",\n  \"5\": \"Waterway\",\n  \"6\": \"Highway-waterway\",\n  \"7\": \"Railroad-waterway\",\n  \"8\": \"Highway-waterway-railroad\",\n  \"9\": \"Relief for waterway\",\n  \"0\": \"Other\",\n};\n\nconst highwayMap: Record<string, string> = {\n  \"1\": \"Interstate highway\",\n  \"2\": \"U.S. numbered highway\",\n  \"3\": \"State highway\",\n  \"4\": \"County highway\",\n  \"5\": \"City street\",\n  \"6\": \"Federal lands road\",\n  \"7\": \"State lands road\",\n  \"8\": \"Other (include toll roads not otherwise)\",\n};\n\nconst historicStatusMap: { [code: number]: string } = {\n  1: \"Bridge is on the National Register of Historic Places.\",\n  2: \"Bridge is eligible for the National Register of Historic Places.\",\n  3: \"Bridge is possibly eligible for the National Register of Historic Places (requires further investigation before determination can be made) or bridge is on a State or local historic register.\",\n  4: \"Historical significance is not determinable at this time.\",\n  5: \"Bridge is not eligible for the National Register of Historic Places.\",\n};\n\nexport { historicStatusMap, highwayMap, serviceMap };\n\n// Navigaion\nconst directionMap: { [code: number]: string } = {\n    0: \"Not applicable\",\n    1: \"North\",\n    2: \"East\",\n    3: \"South\",\n    4: \"West\"\n  };\n\n  \nconst navigationMap: { [code: string]: string } = {\n  \"N\": \"Not applicable, no waterway.\",\n  \"0\": \"No navigation control on waterway (bridge permit not required).\",\n  \"1\": \"Navigation control present on waterway.\",\n};\n\nconst tollMap: { [code: number]: string } = {\n  1: \"Toll bridge.\",\n  2: \"On toll road.\",\n  3: \"On free road.\",\n};\n\nconst functionalClassificationMap: { [code: number]: string } = {\n  1: \"Principal Arterial - Interstate\",\n  2: \"Principal Arterial - Other\",\n  6: \"Minor Arterial\",\n  7: \"Major Collector\",\n  8: \"Minor Collector\",\n  9: \"Local\",\n  11: \"Principal Arterial - Interstate (Urban)\",\n  12: \"Principal Arterial - Other Freeways or Expressways (Urban)\",\n  14: \"Other Principal Arterial (Urban)\",\n  16: \"Minor Arterial (Urban)\",\n  17: \"Collector (Urban)\",\n  19: \"Local (Urban)\",\n};\n\nexport { directionMap, tollMap, functionalClassificationMap, navigationMap };\n\n//Condition\nconst conditionMap: Record<number | string, string> = {\n  N: \"NOT APPLICABLE\",\n  \"9\": \"EXCELLENT\",\n  \"8\": \"VERY GOOD\",\n  \"7\": \"GOOD\",\n  \"6\": \"SATISFACTORY\",\n  \"5\": \"FAIR\",\n  \"4\": \"POOR\",\n  \"3\": \"SERIOUS\",\n  \"2\": \"CRITICAL\",\n  \"1\": '\"IMMINENT\" FAILURE',\n  \"0\": \"FAILED\",\n};\n\nconst overallConditionMap: Record<number | string, string> = {\n  F: \"FAIR\",\n  G: \"GOOD\",\n  P: \"POOR\",\n};\nexport { conditionMap, overallConditionMap };\n\n//Maintenance\nconst maintenanceAgencyMap: { [code: number]: string } = {\n  1: \"State Highway Agency\",\n  2: \"County Highway Agency\",\n  3: \"Town or Township Highway Agency\",\n  4: \"City or Municipal Highway Agency\",\n  11: \"State Park, Forest, or Reservation Agency\",\n  12: \"Local Park, Forest, or Reservation Agency\",\n  21: \"Other State Agencies\",\n  25: \"Other Local Agencies\",\n  26: \"Private (other than railroad)\",\n  27: \"Railroad\",\n  31: \"State Toll Authority\",\n  32: \"Local Toll Authority\",\n  60: \"Other Federal Agencies (not listed below)\",\n  61: \"Indian Tribal Government\",\n  62: \"Bureau of Indian Affairs\",\n  63: \"Bureau of Fish and Wildlife\",\n  64: \"U.S. Forest Service\",\n  66: \"National Park Service\",\n  67: \"Tennessee Valley Authority\",\n  68: \"Bureau of Land Management\",\n  69: \"Bureau of Reclamation\",\n  70: \"Corps of Engineers (Civil)\",\n  71: \"Corps of Engineers (Military)\",\n  72: \"Air Force\",\n  73: \"Navy/Marines\",\n  74: \"Army\",\n  75: \"NASA\",\n  76: \"Metropolitan Washington Airports Service\",\n  80: \"Unknown\",\n};\n\nconst workProposedMap: { [code: number]: string } = {\n  31: \"Replacement of bridge or other structure because of substandard load carrying capacity or substandard bridge roadway geometry.\",\n  32: \"Replacement of bridge or other structure because of relocation of road.\",\n  33: \"Widening of existing bridge or other major structure without deck rehabilitation or replacement; includes culvert lengthening.\",\n  34: \"Widening of existing bridge with deck rehabilitation or replacement.\",\n  35: \"Bridge rehabilitation because of general structure deterioration or inadequate strength.\",\n  36: \"Bridge deck rehabilitation with only incidental widening.\",\n  37: \"Bridge deck replacement with only incidental widening.\",\n  38: \"Other structural work, including hydraulic replacements.\",\n};\n\nconst bridgeStatusMap: { [code: string]: string } = {\n  A: \"Open, no restriction\",\n  B: \"Open, posting recommended but not legally implemented (all signs not in place or not correctly implemented)\",\n  D: \"Open, would be posted or closed except for temporary shoring, etc. to allow for unrestricted traffic\",\n  E: \"Open, temporary structure in place to carry legal loads while original structure is closed and awaiting replacement or rehabilitation\",\n  G: \"New structure not yet open to traffic\",\n  K: \"Bridge closed to all traffic\",\n  P: \"Posted for load (may include other restrictions such as temporary bridges which are load posted)\",\n  R: \"Posted for other load-capacity restriction (speed, number of vehicles on bridge, etc.)\",\n};\n\nexport { maintenanceAgencyMap, workProposedMap, bridgeStatusMap };\n"],"names":[],"mappings":"AAAA,SAAS;;;;;;;;;;;;;;;AACT,MAAM,aAAqC;IACzC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,MAAM,aAAqC;IACzC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,MAAM,oBAAgD;IACpD,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;;AAIA,YAAY;AACZ,MAAM,eAA2C;IAC7C,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAGF,MAAM,gBAA4C;IAChD,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,MAAM,UAAsC;IAC1C,GAAG;IACH,GAAG;IACH,GAAG;AACL;AAEA,MAAM,8BAA0D;IAC9D,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;;AAIA,WAAW;AACX,MAAM,eAAgD;IACpD,GAAG;IACH,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACP;AAEA,MAAM,sBAAuD;IAC3D,GAAG;IACH,GAAG;IACH,GAAG;AACL;;AAGA,aAAa;AACb,MAAM,uBAAmD;IACvD,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;AAEA,MAAM,kBAA8C;IAClD,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACN;AAEA,MAAM,kBAA8C;IAClD,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;AACL"}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/filter-files/FilterCondition.tsx"],"sourcesContent":["import React from \"react\";\nimport Dropdown from \"@/ui/DropDown\";\nimport RangeInput from \"@/ui/RangeInput\";\nimport { reverseMap } from \"@/utils/reverseMap\";\nimport { conditionMap, overallConditionMap } from \"../NBIHashmaps\";\n\ninterface FilterConditionsProps {\n  filterParams: {\n    bridgeCondition: string;\n    deckCond: string;\n    superstructureCond: string;\n    substructureCond: string;\n    channelCond: string;\n    culvertCond: string;\n    structuralEval: string;\n    deckGeometryEval: string;\n    underclearanceEval: string;\n    waterwayEval: string;\n    apprRoadEval: { min: number; max: number };\n    postingEval: { min: number; max: number };\n    lowestRating: { min: number; max: number };\n  };\n  handleFilterChange: (key: string, value: any) => void;\n}\n\n\n// Reverse maps\nconst reverseConditionMap = reverseMap(conditionMap);\nconst reverseOverallConditionMap = reverseMap(overallConditionMap);\n\nconst FilterCondition: React.FC<FilterConditionsProps> = ({\n  filterParams,\n  handleFilterChange,\n}) => {\n  return (\n    <div className=\"grid grid-cols-2 gap-2\">\n    {/* Condition Columns */}\n    <div className=\"grid grid-cols-2 gap-2\">\n      <Dropdown\n        label=\"Bridge Condition\"\n        options={Object.values(overallConditionMap)}\n        selected={overallConditionMap[filterParams.bridgeCondition]}\n        onSelect={(value) => {\n          const selectedKey = reverseOverallConditionMap[value];\n          handleFilterChange(\"bridgeCondition\", selectedKey);\n        }}\n      />\n  \n      <Dropdown\n        label=\"Deck Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.deckCond]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"deckCond\", selectedKey);\n        }}\n      />\n\n      <Dropdown\n        label=\"Superstructure Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.superstructureCond]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"superstructureCond\", selectedKey);\n        }}\n      />\n  \n      <Dropdown\n        label=\"Substructure Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.substructureCond]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"substructureCond\", selectedKey);\n        }}\n      />\n  \n      <Dropdown\n        label=\"Channel Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.channelCond]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"channelCond\", selectedKey);\n        }}\n      />\n  \n      <Dropdown\n        label=\"Culvert Condition\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.culvertCond]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"culvertCond\", selectedKey);\n        }}\n      />\n    </div>\n  \n    {/* Evaluation Columns */}\n    <div className=\"grid grid-cols-2 gap-2 space\">\n      <Dropdown\n        label=\"Structural Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.structuralEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"structuralEval\", selectedKey);\n        }}\n      />\n  \n      <Dropdown\n        label=\"Deck Geometry Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.deckGeometryEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"deckGeometryEval\", selectedKey);\n        }}\n      />\n      <Dropdown\n        label=\"Under Clearance Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.underclearanceEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"underclearanceEval\", selectedKey);\n        }}\n      />\n      <Dropdown\n        label=\"Waterway Evaluation\"\n        options={Object.values(conditionMap)}\n        selected={conditionMap[filterParams.waterwayEval]}\n        onSelect={(value) => {\n          const selectedKey = reverseConditionMap[value];\n          handleFilterChange(\"waterwayEval\", selectedKey);\n        }}\n      />\n\n      <RangeInput\n        label=\"Approach Road Evaluation\"\n        value={filterParams.apprRoadEval}\n        onChange={(value) => handleFilterChange(\"apprRoadEval\", value)}\n        min={0}\n        max={8}\n      />\n      <RangeInput\n        label=\"Posting Evaluation\"\n        value={filterParams.postingEval}\n        onChange={(value) => handleFilterChange(\"postingEval\", value)}\n        min={0}\n        max={5}\n      />\n      {/* <RangeInput\n        label=\"Lowest Rating\"\n        value={filterParams.lowestRating}\n        onChange={(value) => handleFilterChange(\"lowestRating\", value)}\n        min={0}\n        max={9}\n      /> */}\n    </div>\n  </div>\n  );\n};\n\nexport default FilterCondition;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;;;;AAsBA,eAAe;AACf,MAAM,sBAAsB,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,oIAAA,CAAA,eAAY;AACnD,MAAM,6BAA6B,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,oIAAA,CAAA,sBAAmB;AAEjE,MAAM,kBAAmD,CAAC,EACxD,YAAY,EACZ,kBAAkB,EACnB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BAEf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,sBAAmB;wBAC1C,UAAU,oIAAA,CAAA,sBAAmB,CAAC,aAAa,eAAe,CAAC;wBAC3D,UAAU,CAAC;4BACT,MAAM,cAAc,0BAA0B,CAAC,MAAM;4BACrD,mBAAmB,mBAAmB;wBACxC;;;;;;kCAGF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,QAAQ,CAAC;wBAC7C,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,YAAY;wBACjC;;;;;;kCAGF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,kBAAkB,CAAC;wBACvD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,sBAAsB;wBAC3C;;;;;;kCAGF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,gBAAgB,CAAC;wBACrD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,oBAAoB;wBACzC;;;;;;kCAGF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,WAAW,CAAC;wBAChD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,eAAe;wBACpC;;;;;;kCAGF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,WAAW,CAAC;wBAChD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,eAAe;wBACpC;;;;;;;;;;;;0BAKJ,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,cAAc,CAAC;wBACnD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,kBAAkB;wBACvC;;;;;;kCAGF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,gBAAgB,CAAC;wBACrD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,oBAAoB;wBACzC;;;;;;kCAEF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,kBAAkB,CAAC;wBACvD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,sBAAsB;wBAC3C;;;;;;kCAEF,6LAAC,yHAAA,CAAA,UAAQ;wBACP,OAAM;wBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,eAAY;wBACnC,UAAU,oIAAA,CAAA,eAAY,CAAC,aAAa,YAAY,CAAC;wBACjD,UAAU,CAAC;4BACT,MAAM,cAAc,mBAAmB,CAAC,MAAM;4BAC9C,mBAAmB,gBAAgB;wBACrC;;;;;;kCAGF,6LAAC,2HAAA,CAAA,UAAU;wBACT,OAAM;wBACN,OAAO,aAAa,YAAY;wBAChC,UAAU,CAAC,QAAU,mBAAmB,gBAAgB;wBACxD,KAAK;wBACL,KAAK;;;;;;kCAEP,6LAAC,2HAAA,CAAA,UAAU;wBACT,OAAM;wBACN,OAAO,aAAa,WAAW;wBAC/B,UAAU,CAAC,QAAU,mBAAmB,eAAe;wBACvD,KAAK;wBACL,KAAK;;;;;;;;;;;;;;;;;;AAYb;KArIM;uCAuIS"}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/TextInput.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\n\ntype TextInputProps = {\n  label: string;\n  placeholder: string;\n  value: any;\n  onChange: (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  description?: string;\n};\n\nconst TextInput: React.FC<TextInputProps> = ({\n  label,\n  placeholder,\n  value,\n  onChange,\n  description\n}) => {\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <label className=\"text-gray-600 font-medium\">{label}</label>\n      <div className=\"relative\">\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n          className=\"outline-none px-4 py-2 w-full border border-gray-300 rounded focus:ring-2 focus:ring-black text-black\"\n        />\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default TextInput;\n"],"names":[],"mappings":";;;;;AAUA,MAAM,YAAsC,CAAC,EAC3C,KAAK,EACL,WAAW,EACX,KAAK,EACL,QAAQ,EACR,WAAW,EACZ;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAM,WAAU;0BAA6B;;;;;;0BAC9C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,MAAK;wBACL,aAAa;wBACb,OAAO;wBACP,UAAU;wBACV,WAAU;;;;;;kCAEZ,6LAAC;kCAAG;;;;;;;;;;;;;;;;;;AAIZ;KAtBM;uCAwBS"}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 699, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/filter-files/FilterBridge.tsx"],"sourcesContent":["import React from \"react\";\nimport TextInput from \"@/ui/TextInput\";\nimport Dropdown from \"@/ui/DropDown\";\nimport RangeInput from \"@/ui/RangeInput\";\nimport { reverseMap } from \"@/utils/reverseMap\";\nimport { highwayMap, serviceMap } from \"../NBIHashmaps\";\n\ninterface FilterBridgesParams {\n  filterParams: {\n    location: number | string;\n    yearBuilt: { min: number; max: number };\n    yearReconstructed: { min: number; max: number };\n    fedAgency: string;\n    serviceOn: number | null;\n    routePrefix: number;\n  };\n  handleFilterChange: (key: string, value: any) => void;\n}\n\n\n\nconst FilterBridge: React.FC<FilterBridgesParams> = ({\n  filterParams,\n  handleFilterChange,\n}) => {\n  const reverseServiceMap = reverseMap(serviceMap);\n  const reverseHighwayMap = reverseMap(highwayMap);\n\n  return (\n    <div className=\"grid grid-cols-3 gap-4\">\n      <TextInput\n        label=\"Location\"\n        placeholder=\"Enter State Code\"\n        value={filterParams.location}\n        onChange={(e) => handleFilterChange(\"stateCode\", e.target.value)}\n      />\n      <RangeInput\n        label=\"Year Built\"\n        value={filterParams.yearBuilt}\n        onChange={(value) => handleFilterChange(\"yearBuilt\", value)}\n        min = {1697}\n        max = {2021}\n      />\n      <RangeInput\n        label=\"Year Reconstructed\"\n        value={filterParams.yearReconstructed}\n        onChange={(value) => handleFilterChange(\"yearReconstructed\", value)}\n        min = {0}\n        max = {2021}\n      />\n      <Dropdown\n        label=\"Federal Agency\"\n        options={[\"Y\", \"N\"]}\n        selected={filterParams.fedAgency}\n        onSelect={(value) => {\n          handleFilterChange(\"fedAgency\", value);\n        }}\n      />\n      <Dropdown\n        label=\"Highway\"\n        options={Object.values(highwayMap)} \n        selected={highwayMap[String(filterParams.routePrefix)]} \n        onSelect={(value) => {\n          const selectedKey = reverseHighwayMap[value]; \n          handleFilterChange(\"routePrefix\", parseInt(selectedKey, 10)); // Parse key back to number\n        }}\n      />\n      <Dropdown\n        label=\"Service\"\n        options={Object.values(serviceMap)}\n        selected={serviceMap[String(filterParams.serviceOn)]} \n        onSelect={(value) => {\n          const selectedKey = reverseServiceMap[value]; \n          handleFilterChange(\"serviceOn\", parseInt(selectedKey, 10)); \n        }}\n      />\n    </div>\n  );\n};\n\nexport default FilterBridge;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAgBA,MAAM,eAA8C,CAAC,EACnD,YAAY,EACZ,kBAAkB,EACnB;IACC,MAAM,oBAAoB,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,oIAAA,CAAA,aAAU;IAC/C,MAAM,oBAAoB,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,oIAAA,CAAA,aAAU;IAE/C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,0HAAA,CAAA,UAAS;gBACR,OAAM;gBACN,aAAY;gBACZ,OAAO,aAAa,QAAQ;gBAC5B,UAAU,CAAC,IAAM,mBAAmB,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;0BAEjE,6LAAC,2HAAA,CAAA,UAAU;gBACT,OAAM;gBACN,OAAO,aAAa,SAAS;gBAC7B,UAAU,CAAC,QAAU,mBAAmB,aAAa;gBACrD,KAAO;gBACP,KAAO;;;;;;0BAET,6LAAC,2HAAA,CAAA,UAAU;gBACT,OAAM;gBACN,OAAO,aAAa,iBAAiB;gBACrC,UAAU,CAAC,QAAU,mBAAmB,qBAAqB;gBAC7D,KAAO;gBACP,KAAO;;;;;;0BAET,6LAAC,yHAAA,CAAA,UAAQ;gBACP,OAAM;gBACN,SAAS;oBAAC;oBAAK;iBAAI;gBACnB,UAAU,aAAa,SAAS;gBAChC,UAAU,CAAC;oBACT,mBAAmB,aAAa;gBAClC;;;;;;0BAEF,6LAAC,yHAAA,CAAA,UAAQ;gBACP,OAAM;gBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,aAAU;gBACjC,UAAU,oIAAA,CAAA,aAAU,CAAC,OAAO,aAAa,WAAW,EAAE;gBACtD,UAAU,CAAC;oBACT,MAAM,cAAc,iBAAiB,CAAC,MAAM;oBAC5C,mBAAmB,eAAe,SAAS,aAAa,MAAM,2BAA2B;gBAC3F;;;;;;0BAEF,6LAAC,yHAAA,CAAA,UAAQ;gBACP,OAAM;gBACN,SAAS,OAAO,MAAM,CAAC,oIAAA,CAAA,aAAU;gBACjC,UAAU,oIAAA,CAAA,aAAU,CAAC,OAAO,aAAa,SAAS,EAAE;gBACpD,UAAU,CAAC;oBACT,MAAM,cAAc,iBAAiB,CAAC,MAAM;oBAC5C,mBAAmB,aAAa,SAAS,aAAa;gBACxD;;;;;;;;;;;;AAIR;KAzDM;uCA2DS"}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/utils/geoConversion.ts"],"sourcesContent":["export const convertLatitude = (rawLat: number): number => {\n  return rawLat / 1000000; // Divide by 1,000,000 to get decimal degrees\n};\n\nexport const convertLongitude = (rawLong: number): number => {\n  return -rawLong / 1000000;\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,kBAAkB,CAAC;IAC9B,OAAO,SAAS,SAAS,6CAA6C;AACxE;AAEO,MAAM,mBAAmB,CAAC;IAC/B,OAAO,CAAC,UAAU;AACpB"}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/Mapbox.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Map, Marker, Popup } from \"react-map-gl\";\nimport { Bridge } from \"../../typing\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { convertLatitude, convertLongitude } from \"@/utils/geoConversion\";\nimport { useState } from \"react\";\nimport { transformStructureNum } from \"@/utils/structureNum\";\nimport { trimQuotes } from \"@/utils/trimQuotes\";\n\ninterface BridgeListProps {\n  bridges: Bridge[];\n}\n\nconst Mapbox: React.FC<BridgeListProps> = ({ bridges }) => {\n  // Track the structureNumber of the clicked bridge\n  const [selectedBridge, setSelectedBridge] = useState<Bridge | null>(null);\n  console.log(selectedBridge);\n  return (\n    <div className=\"flex h-screen flex-grow w-full p-4 bg-white shadow-md rounded-md\">\n      <Map\n        mapboxAccessToken={process.env.NEXT_PUBLIC_MAPBOX_TOKEN}\n        initialViewState={{\n          longitude: -79.99,\n          latitude: 40.44,\n          zoom: 10,\n        }}\n        mapStyle=\"mapbox://styles/ahmadhawamdah/cm4g9ldnm008m01ra7osc4t0w\"\n      >\n        {bridges?.map((bridge) => (\n          <div key={bridge.structureNumber}>\n            <Marker\n              longitude={convertLongitude(bridge.long)}\n              latitude={convertLatitude(bridge.lat)}\n            >\n              <p\n                className=\"animate-bounce cursor-pointer text-xl\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setSelectedBridge(bridge);\n                }}\n              >\n                🌉{\" \"}\n              </p>\n            </Marker>\n\n            {selectedBridge?.long === bridge.long ? (\n              <Popup\n                longitude={convertLongitude(selectedBridge.long)}\n                latitude={convertLatitude(selectedBridge.lat)}\n                anchor=\"top\"\n                onClose={() => setSelectedBridge(null)}\n                closeOnClick={true}\n              >\n                <div className=\"z-20\">\n                  <p className=\" text-base text-black \">\n                    <strong> Structure </strong>{\" \"}\n                    {transformStructureNum(bridge.structureNumber)}\n                  </p>\n                  <p className=\"text-xs  text-gray-800\">\n                    {trimQuotes(bridge.location)}\n                  </p>\n                  <p className=\"text-xs text-gray-800\">\n                    Year Built: {bridge.yearBuilt}\n                  </p>\n                </div>\n              </Popup>\n            ) : (\n              false\n            )}\n          </div>\n        ))}\n      </Map>\n    </div>\n  );\n};\n\nexport default Mapbox;\n"],"names":[],"mappings":";;;;AACA;AAGA;AACA;AACA;AACA;AANA;AAmB2B;;;;;;;;;AAP3B,MAAM,SAAoC,CAAC,EAAE,OAAO,EAAE;;IACpD,kDAAkD;IAClD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,QAAQ,GAAG,CAAC;IACZ,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,yLAAA,CAAA,MAAG;YACF,iBAAiB;YACjB,kBAAkB;gBAChB,WAAW,CAAC;gBACZ,UAAU;gBACV,MAAM;YACR;YACA,UAAS;sBAER,SAAS,IAAI,CAAC,uBACb,6LAAC;;sCACC,6LAAC,yLAAA,CAAA,SAAM;4BACL,WAAW,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO,IAAI;4BACvC,UAAU,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,OAAO,GAAG;sCAEpC,cAAA,6LAAC;gCACC,WAAU;gCACV,SAAS,CAAC;oCACR,EAAE,eAAe;oCACjB,kBAAkB;gCACpB;;oCACD;oCACI;;;;;;;;;;;;wBAIN,gBAAgB,SAAS,OAAO,IAAI,iBACnC,6LAAC,yLAAA,CAAA,QAAK;4BACJ,WAAW,CAAA,GAAA,gIAAA,CAAA,mBAAgB,AAAD,EAAE,eAAe,IAAI;4BAC/C,UAAU,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE,eAAe,GAAG;4BAC5C,QAAO;4BACP,SAAS,IAAM,kBAAkB;4BACjC,cAAc;sCAEd,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;;0DACX,6LAAC;0DAAO;;;;;;4CAAqB;4CAC5B,CAAA,GAAA,+HAAA,CAAA,wBAAqB,AAAD,EAAE,OAAO,eAAe;;;;;;;kDAE/C,6LAAC;wCAAE,WAAU;kDACV,CAAA,GAAA,6HAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;;;;;;kDAE7B,6LAAC;wCAAE,WAAU;;4CAAwB;4CACtB,OAAO,SAAS;;;;;;;;;;;;;;;;;mCAKnC;;mBAtCM,OAAO,eAAe;;;;;;;;;;;;;;;AA6C1C;GA7DM;KAAA;uCA+DS"}},
    {"offset": {"line": 973, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 979, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/ui/Loading.tsx"],"sourcesContent":["import React from 'react'\n\nfunction Loading() {\n  return (\n    <div className=\"flex justify-center items-center h-screen\">\n      <div className=\"w-12 h-12 border-4 border-yellow-500 border-t-transparent rounded-full animate-spin\"></div>\n    </div>\n  )\n}\n\nexport default Loading;"],"names":[],"mappings":";;;;;AAEA,SAAS;IACP,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;;;;;;;;;;AAGrB;KANS;uCAQM"}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/bridge-info/Navigation.tsx"],"sourcesContent":["import React from \"react\";\nimport { directionMap, functionalClassificationMap, navigationMap, tollMap } from \"../NBIHashmaps\";\n\nconst Navigation = ({ navigation }: { navigation: any }) => {\n  return (\n    <section>\n      <h3 className=\"text-lg font-semibold\">Navigation</h3>\n      <p className=\"text-sm\">Direction: {directionMap[navigation[0].direction]}</p>\n      <p className=\"text-sm\">Traffic Lanes On: {navigation[0].trafficLanesOn}</p>\n      <p className=\"text-sm\">Traffic Lanes Under: {navigation[0].trafficLanesUnd || \"N/A\"}</p>\n      <p className=\"text-sm\">Traffic Direction: {navigation[0].trafficDirection}</p>\n      <p className=\"text-sm\">Navigation: {navigationMap[navigation[0].navigation] || \"N/A\"}</p>\n      <p className=\"text-sm\">Toll: {tollMap[navigation[0].toll] ? \"Yes\" : \"No\"}</p>\n      <p className=\"text-sm\">Functional Class: {functionalClassificationMap[navigation[0].functionalClass]}</p>\n      <p className=\"text-sm\">Detour: {navigation[0].detourKilos || \"N/A\"} kilos</p>\n      <p className=\"text-sm\">Kilopoint: {navigation[0].kilopoint || \"N/A\"}</p>\n      <p className=\"text-sm\">ADT (Average Daily Traffic): {navigation[0].adt}</p>\n      <p className=\"text-sm\">\n        Percent ADT Truck: {navigation[0].percentAdtTruck || \"N/A\"}%\n      </p>\n      <p className=\"text-sm\">Year ADT: {navigation[0].yearAdt}</p>\n      <p className=\"text-sm\">Future ADT: {navigation[0].futureAdt}</p>\n      <p className=\"text-sm\">Year of Future ADT: {navigation[0].yearOfFutureAdt}</p>\n    </section>\n  );\n};\n\nexport default Navigation;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,aAAa,CAAC,EAAE,UAAU,EAAuB;IACrD,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;;oBAAU;oBAAY,oIAAA,CAAA,eAAY,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC;;;;;;;0BACxE,6LAAC;gBAAE,WAAU;;oBAAU;oBAAmB,UAAU,CAAC,EAAE,CAAC,cAAc;;;;;;;0BACtE,6LAAC;gBAAE,WAAU;;oBAAU;oBAAsB,UAAU,CAAC,EAAE,CAAC,eAAe,IAAI;;;;;;;0BAC9E,6LAAC;gBAAE,WAAU;;oBAAU;oBAAoB,UAAU,CAAC,EAAE,CAAC,gBAAgB;;;;;;;0BACzE,6LAAC;gBAAE,WAAU;;oBAAU;oBAAa,oIAAA,CAAA,gBAAa,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI;;;;;;;0BAC/E,6LAAC;gBAAE,WAAU;;oBAAU;oBAAO,oIAAA,CAAA,UAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,QAAQ;;;;;;;0BACpE,6LAAC;gBAAE,WAAU;;oBAAU;oBAAmB,oIAAA,CAAA,8BAA2B,CAAC,UAAU,CAAC,EAAE,CAAC,eAAe,CAAC;;;;;;;0BACpG,6LAAC;gBAAE,WAAU;;oBAAU;oBAAS,UAAU,CAAC,EAAE,CAAC,WAAW,IAAI;oBAAM;;;;;;;0BACnE,6LAAC;gBAAE,WAAU;;oBAAU;oBAAY,UAAU,CAAC,EAAE,CAAC,SAAS,IAAI;;;;;;;0BAC9D,6LAAC;gBAAE,WAAU;;oBAAU;oBAA8B,UAAU,CAAC,EAAE,CAAC,GAAG;;;;;;;0BACtE,6LAAC;gBAAE,WAAU;;oBAAU;oBACD,UAAU,CAAC,EAAE,CAAC,eAAe,IAAI;oBAAM;;;;;;;0BAE7D,6LAAC;gBAAE,WAAU;;oBAAU;oBAAW,UAAU,CAAC,EAAE,CAAC,OAAO;;;;;;;0BACvD,6LAAC;gBAAE,WAAU;;oBAAU;oBAAa,UAAU,CAAC,EAAE,CAAC,SAAS;;;;;;;0BAC3D,6LAAC;gBAAE,WAAU;;oBAAU;oBAAqB,UAAU,CAAC,EAAE,CAAC,eAAe;;;;;;;;;;;;;AAG/E;KAtBM;uCAwBS"}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/bridge-info/Condition.tsx"],"sourcesContent":["import React from \"react\";\nimport { conditionMap, overallConditionMap } from \"../NBIHashmaps\";\n\nconst Condition = ({ condition }: { condition: any }) => {\n  return (\n    <section>\n      <h3 className=\"text-lg font-semibold\">Condition</h3>\n      <p className=\"text-sm\">\n        Bridge Condition: {overallConditionMap[condition[0].bridgeCondition]}\n      </p>\n      <p className=\"text-sm\">\n        Deck Condition: {conditionMap[condition[0].deckCond]}\n      </p>\n      <p className=\"text-sm\">\n        Superstructure Condition: {conditionMap[condition[0].superstructureCond]}\n      </p>\n      <p className=\"text-sm\">\n        Substructure Condition: {conditionMap[condition[0].substructureCond]}\n      </p>\n      <p className=\"text-sm\">\n        Channel Condition: {conditionMap[condition[0].channelCond] || \"N/A\"}\n      </p>\n    </section>\n  );\n};\n\nexport default Condition;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,YAAY,CAAC,EAAE,SAAS,EAAsB;IAClD,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;;oBAAU;oBACF,oIAAA,CAAA,sBAAmB,CAAC,SAAS,CAAC,EAAE,CAAC,eAAe,CAAC;;;;;;;0BAEtE,6LAAC;gBAAE,WAAU;;oBAAU;oBACJ,oIAAA,CAAA,eAAY,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC;;;;;;;0BAEtD,6LAAC;gBAAE,WAAU;;oBAAU;oBACM,oIAAA,CAAA,eAAY,CAAC,SAAS,CAAC,EAAE,CAAC,kBAAkB,CAAC;;;;;;;0BAE1E,6LAAC;gBAAE,WAAU;;oBAAU;oBACI,oIAAA,CAAA,eAAY,CAAC,SAAS,CAAC,EAAE,CAAC,gBAAgB,CAAC;;;;;;;0BAEtE,6LAAC;gBAAE,WAAU;;oBAAU;oBACD,oIAAA,CAAA,eAAY,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI;;;;;;;;;;;;;AAItE;KArBM;uCAuBS"}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1300, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/bridge-info/Maintenance.tsx"],"sourcesContent":["import React from \"react\";\nimport { bridgeStatusMap, maintenanceAgencyMap, workProposedMap } from \"../NBIHashmaps\";\n\nconst Maintenance = ({ maintenance }: { maintenance: any }) => {\n  return (\n    <section>\n      <h3 className=\"text-lg font-semibold\">Maintenance</h3>\n      <p className=\"text-sm\">\n        Maintenance Agency: {maintenanceAgencyMap[maintenance[0].maintenanceType]}\n      </p>\n      <p className=\"text-sm\">\n        Bridge Improvement: {\"$\" +maintenance[0].bridgeImprovement || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Roadway Improvement: {\"$\" + maintenance[0].roadwayImprovement || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Total Improvement: {\"$\" + maintenance[0].totalImprovement || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Year of Improvement: {maintenance[0].yearOfImprovement || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Work Proposed: {workProposedMap[maintenance[0].workProposed] || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Inspection Frequency: {maintenance[0].inspectionFrequency}\n      </p>\n      <p className=\"text-sm\">\n        Fracture Critical: {maintenance[0].fractureCritical || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Open/Closed/Posted: {bridgeStatusMap[maintenance[0].openClosedPosted]}\n      </p>\n    </section>\n  );\n};\n\nexport default Maintenance;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,cAAc,CAAC,EAAE,WAAW,EAAwB;IACxD,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;;oBAAU;oBACA,oIAAA,CAAA,uBAAoB,CAAC,WAAW,CAAC,EAAE,CAAC,eAAe,CAAC;;;;;;;0BAE3E,6LAAC;gBAAE,WAAU;;oBAAU;oBACA,MAAK,WAAW,CAAC,EAAE,CAAC,iBAAiB,IAAI;;;;;;;0BAEhE,6LAAC;gBAAE,WAAU;;oBAAU;oBACC,MAAM,WAAW,CAAC,EAAE,CAAC,kBAAkB,IAAI;;;;;;;0BAEnE,6LAAC;gBAAE,WAAU;;oBAAU;oBACD,MAAM,WAAW,CAAC,EAAE,CAAC,gBAAgB,IAAI;;;;;;;0BAE/D,6LAAC;gBAAE,WAAU;;oBAAU;oBACC,WAAW,CAAC,EAAE,CAAC,iBAAiB,IAAI;;;;;;;0BAE5D,6LAAC;gBAAE,WAAU;;oBAAU;oBACL,oIAAA,CAAA,kBAAe,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI;;;;;;;0BAElE,6LAAC;gBAAE,WAAU;;oBAAU;oBACE,WAAW,CAAC,EAAE,CAAC,mBAAmB;;;;;;;0BAE3D,6LAAC;gBAAE,WAAU;;oBAAU;oBACD,WAAW,CAAC,EAAE,CAAC,gBAAgB,IAAI;;;;;;;0BAEzD,6LAAC;gBAAE,WAAU;;oBAAU;oBACA,oIAAA,CAAA,kBAAe,CAAC,WAAW,CAAC,EAAE,CAAC,gBAAgB,CAAC;;;;;;;;;;;;;AAI7E;KAjCM;uCAmCS"}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/bridge-info/Geometry.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Geometry = ({ geometry }: { geometry: any }) => {\n  return (\n    <section>\n      <h3 className=\"text-lg font-semibold\">Geometry</h3>\n      <p className=\"text-sm\">\n        Structure Length: {geometry[0].structureLength}m\n      </p>\n      <p className=\"text-sm\">\n        Deck Width: {geometry[0].deckWidth}m\n      </p>\n      <p className=\"text-sm\">\n        Roadway Width: {geometry[0].roadwayWidth}m\n      </p>\n      <p className=\"text-sm\">\n        Min Vertical Clearance: {geometry[0].minVertClearance}m\n      </p>\n      <p className=\"text-sm\">\n        Approach Width: {geometry[0].apprWidth}m\n      </p>\n      <p className=\"text-sm\">\n        Structure Flared: {geometry[0].structureFlared ? \"Yes\" : \"No\"}\n      </p>\n      <p className=\"text-sm\">\n        Navigation Vertical Clearance: {geometry[0].navVertClearance}m\n      </p>\n      <p className=\"text-sm\">\n        Navigation Horizontal Clearance: {geometry[0].navHorrClearance}m\n      </p>\n      <p className=\"text-sm\">\n        Left Curb Width: {geometry[0].leftCurbWidth}m\n      </p>\n      <p className=\"text-sm\">\n        Right Curb Width: {geometry[0].rightCurbWidth}m\n      </p>\n      <p className=\"text-sm\">\n        Deck Area: {geometry[0].deckArea}m²\n      </p>\n    </section>\n  );\n};\n\nexport default Geometry;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,WAAW,CAAC,EAAE,QAAQ,EAAqB;IAC/C,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;;oBAAU;oBACF,QAAQ,CAAC,EAAE,CAAC,eAAe;oBAAC;;;;;;;0BAEjD,6LAAC;gBAAE,WAAU;;oBAAU;oBACR,QAAQ,CAAC,EAAE,CAAC,SAAS;oBAAC;;;;;;;0BAErC,6LAAC;gBAAE,WAAU;;oBAAU;oBACL,QAAQ,CAAC,EAAE,CAAC,YAAY;oBAAC;;;;;;;0BAE3C,6LAAC;gBAAE,WAAU;;oBAAU;oBACI,QAAQ,CAAC,EAAE,CAAC,gBAAgB;oBAAC;;;;;;;0BAExD,6LAAC;gBAAE,WAAU;;oBAAU;oBACJ,QAAQ,CAAC,EAAE,CAAC,SAAS;oBAAC;;;;;;;0BAEzC,6LAAC;gBAAE,WAAU;;oBAAU;oBACF,QAAQ,CAAC,EAAE,CAAC,eAAe,GAAG,QAAQ;;;;;;;0BAE3D,6LAAC;gBAAE,WAAU;;oBAAU;oBACW,QAAQ,CAAC,EAAE,CAAC,gBAAgB;oBAAC;;;;;;;0BAE/D,6LAAC;gBAAE,WAAU;;oBAAU;oBACa,QAAQ,CAAC,EAAE,CAAC,gBAAgB;oBAAC;;;;;;;0BAEjE,6LAAC;gBAAE,WAAU;;oBAAU;oBACH,QAAQ,CAAC,EAAE,CAAC,aAAa;oBAAC;;;;;;;0BAE9C,6LAAC;gBAAE,WAAU;;oBAAU;oBACF,QAAQ,CAAC,EAAE,CAAC,cAAc;oBAAC;;;;;;;0BAEhD,6LAAC;gBAAE,WAAU;;oBAAU;oBACT,QAAQ,CAAC,EAAE,CAAC,QAAQ;oBAAC;;;;;;;;;;;;;AAIzC;KAvCM;uCAyCS"}},
    {"offset": {"line": 1598, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1604, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/bridge-info/Structure.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Structure = ({ structure }: { structure: any }) => {\n  return (\n    <section>\n      <h3 className=\"text-lg font-semibold\">Structure</h3>\n      <p className=\"text-sm\">\n        Structure Kind: {structure[0].structureKind}\n      </p>\n      <p className=\"text-sm\">\n        Main Unit Spans: {structure[0].mainUnitSpans}\n      </p>\n      <p className=\"text-sm\">\n        Median Code: {structure[0].medianCode}\n      </p>\n      <p className=\"text-sm\">\n        Approach Kind: {structure[0].apprKind}\n      </p>\n      <p className=\"text-sm\">\n        Structure Type: {structure[0].structureType}\n      </p>\n      <p className=\"text-sm\">\n        Approach Type: {structure[0].apprType}\n      </p>\n      <p className=\"text-sm\">\n        Approach Spans: {structure[0].apprSpans}\n      </p>\n      <p className=\"text-sm\">\n        Deck Structure Type: {structure[0].deckStructureType}\n      </p>\n      <p className=\"text-sm\">\n        Railings: {structure[0].railings || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Transitions: {structure[0].transitions || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Approach Rail: {structure[0].apprRail || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Approach Rail End: {structure[0].apprRailEnd || \"N/A\"}\n      </p>\n      <p className=\"text-sm\">\n        Parallel Structure: {structure[0].parallelStructure}\n      </p>\n    </section>\n  );\n};\n\nexport default Structure;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,YAAY,CAAC,EAAE,SAAS,EAAsB;IAClD,qBACE,6LAAC;;0BACC,6LAAC;gBAAG,WAAU;0BAAwB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;;oBAAU;oBACJ,SAAS,CAAC,EAAE,CAAC,aAAa;;;;;;;0BAE7C,6LAAC;gBAAE,WAAU;;oBAAU;oBACH,SAAS,CAAC,EAAE,CAAC,aAAa;;;;;;;0BAE9C,6LAAC;gBAAE,WAAU;;oBAAU;oBACP,SAAS,CAAC,EAAE,CAAC,UAAU;;;;;;;0BAEvC,6LAAC;gBAAE,WAAU;;oBAAU;oBACL,SAAS,CAAC,EAAE,CAAC,QAAQ;;;;;;;0BAEvC,6LAAC;gBAAE,WAAU;;oBAAU;oBACJ,SAAS,CAAC,EAAE,CAAC,aAAa;;;;;;;0BAE7C,6LAAC;gBAAE,WAAU;;oBAAU;oBACL,SAAS,CAAC,EAAE,CAAC,QAAQ;;;;;;;0BAEvC,6LAAC;gBAAE,WAAU;;oBAAU;oBACJ,SAAS,CAAC,EAAE,CAAC,SAAS;;;;;;;0BAEzC,6LAAC;gBAAE,WAAU;;oBAAU;oBACC,SAAS,CAAC,EAAE,CAAC,iBAAiB;;;;;;;0BAEtD,6LAAC;gBAAE,WAAU;;oBAAU;oBACV,SAAS,CAAC,EAAE,CAAC,QAAQ,IAAI;;;;;;;0BAEtC,6LAAC;gBAAE,WAAU;;oBAAU;oBACP,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI;;;;;;;0BAE5C,6LAAC;gBAAE,WAAU;;oBAAU;oBACL,SAAS,CAAC,EAAE,CAAC,QAAQ,IAAI;;;;;;;0BAE3C,6LAAC;gBAAE,WAAU;;oBAAU;oBACD,SAAS,CAAC,EAAE,CAAC,WAAW,IAAI;;;;;;;0BAElD,6LAAC;gBAAE,WAAU;;oBAAU;oBACA,SAAS,CAAC,EAAE,CAAC,iBAAiB;;;;;;;;;;;;;AAI3D;KA7CM;uCA+CS"}},
    {"offset": {"line": 1777, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1783, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/bridge-info/BridgeCard.tsx"],"sourcesContent":["\"use client\";\n\nimport Loading from \"@/ui/Loading\";\nimport { transformStructureNum } from \"@/utils/structureNum\";\nimport React, { useEffect, useState } from \"react\";\nimport Navigation from \"./Navigation\";\nimport Condition from \"./Condition\";\nimport Maintenance from \"./Maintenance\";\nimport Geometry from \"./Geometry\";\nimport Structure from \"./Structure\";\nimport { trimQuotes } from \"@/utils/trimQuotes\";\nimport { convertLatitude, convertLongitude } from \"@/utils/geoConversion\";\nimport { highwayMap, historicStatusMap, serviceMap } from \"../NBIHashmaps\";\n\ninterface BridgeCardProps {\n  structureNumber: string; // The selected structure number\n  setSelectedStructureNumber: (value: string | null) => void;\n}\n\nconst BridgeCard: React.FC<BridgeCardProps> = ({\n  structureNumber,\n  setSelectedStructureNumber,\n}) => {\n  const [bridgeData, setBridgeData] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!structureNumber) return;\n\n    const fetchBridgeData = async () => {\n      setLoading(true);\n      setError(null);\n      structureNumber = structureNumber.toString()\n      try {\n        const res = await fetch(`/api/bridge-info/${structureNumber}`);\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch bridge details\");\n        }\n\n        const data = await res.json();\n        setBridgeData(data);\n      } catch (err: any) {\n        setError(err.message || \"An error occurred while fetching data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBridgeData();\n  }, [structureNumber]);\n\n  if (!structureNumber) {\n    return (\n      <div className=\"p-6 bg-white shadow-md rounded-md\">\n        Select a bridge to view details.\n      </div>\n    );\n  }\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"p-6 bg-white shadow-md rounded-md text-red-500\">\n        {error}\n      </div>\n    );\n  }\n\n  if (!bridgeData) {\n    return (\n      <div className=\"p-6 bg-white shadow-md rounded-md\">\n        No data available for this bridge.\n      </div>\n    );\n  }\n\n  const {\n    navigation,\n    conditon,\n    maintenance,\n    geometry,\n    structure,\n    history,\n    serviceOn,\n    routePrefix,\n    fedAgency,\n    ...bridge\n  } = bridgeData;\n\n  return (\n    <div className=\"overscroll-contain p-6 min-w-[270px] h-screen overflow-y-auto bg-white shadow-md rounded-md text-black  w-1/2 \">\n      <div className=\"flex justify-between\">\n        <h2 className=\"text-xl font-bold\">Bridge Details</h2>\n        <button\n          onClick={() => setSelectedStructureNumber(null)}\n          className=\"p-2 font-bold rounded-full bg-yellow-400 text-white hover:bg-red-600 transition-transform transform hover:scale-110 shadow-md w-10\"\n          aria-label=\"Close\"\n        >\n          ✖\n        </button>\n      </div>\n      {/* <ThreeDHighway /> */}\n      <div className=\"grid\">\n        <section>\n          <p className=\"text-sm\">\n            Structure Number: {transformStructureNum(bridge.structureNumber)}\n          </p>\n          <p className=\"text-sm\">Location: {trimQuotes(bridge.location)}</p>\n          <p className=\"text-sm\">Year Built: {bridge.yearBuilt}</p>\n          <p className=\"text-sm\">\n            Year Reconstructed: {bridge.yearReconstructed || \"N/A\"}\n          </p>\n          <p className=\"text-sm\">Latitude: {convertLatitude(bridge.lat)}</p>\n          <p className=\"text-sm\">Longitude: {convertLongitude(bridge.long)}</p>\n          <p className=\"text-sm\">Route Prefix: {highwayMap[routePrefix]}</p>\n          <p className=\"text-sm\">Federal Agency: {fedAgency}</p>\n          <p className=\"text-sm\">Service On: {serviceMap[serviceOn]}</p>\n          <p className=\"text-sm\">History: {historicStatusMap[history]}</p>\n        </section>\n\n        {navigation && <Navigation navigation={navigation} />}\n        {conditon && <Condition condition={conditon} />}\n        {maintenance && <Maintenance maintenance={maintenance} />}\n        {geometry && <Geometry geometry={geometry} />}\n        {structure && <Structure structure={structure} />}\n      </div>\n    </div>\n  );\n};\n\nexport default BridgeCard;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2095, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/components/Map9.tsx"],"sourcesContent":["\"use client\";\n\nimport Button from \"@/ui/Button\";\nimport React, { useState } from \"react\";\nimport BridgeList from \"./BridgeList\";\nimport {\n  Bridge,\n  FilterBridgesParams,\n  FilterConditionsParams,\n} from \"../../typing\";\nimport FilterCondition from \"./filter-files/FilterCondition\";\nimport FilterBridge from \"./filter-files/FilterBridge\";\nimport Mapbox from \"./Mapbox\";\nimport BridgeCard from \"./bridge-info/BridgeCard\";\n\n\ninterface Map9Props {\n  type: \"bridge\" | \"condition\";\n  filterParams: FilterBridgesParams | FilterConditionsParams;\n  handleFilterChange: (key: string, value: any) => void;\n}\n\nconst Map9: React.FC<Map9Props> = ({\n  type,\n  filterParams,\n  handleFilterChange,\n}) => {\n  const [filteredResults, setFilteredResults] = useState<Bridge[]>([]);\n  const [selectedStructureNumber, setSelectedStructureNumber] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleApplyFilters = async () => {\n    try {\n      setLoading(true);\n\n      const res = await fetch(`/api/${type}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(filterParams),\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n\n      const data: Bridge[] = await res.json();\n      setFilteredResults(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-6\">\n        <h2 className=\"text-xl font-semibold mb-4 text-black\">Filters</h2>\n        {type === \"bridge\" ? (\n          <FilterBridge\n            filterParams={filterParams as FilterBridgesParams}\n            handleFilterChange={handleFilterChange}\n          />\n        ) : (\n          <FilterCondition\n            filterParams={filterParams as FilterConditionsParams}\n            handleFilterChange={handleFilterChange}\n          />\n        )}\n        <div className=\"mt-6\">\n          <Button\n            onClick={handleApplyFilters}\n            label={loading ? \"Loading...\" : \"Apply Filters\"}\n          />\n        </div>\n      </div>\n\n      <div className=\"flex h-full\">\n        <Mapbox bridges={filteredResults} />\n        <BridgeList bridges={filteredResults} setSelectedStructureNumber={setSelectedStructureNumber} />\n        {selectedStructureNumber && (\n          <BridgeCard\n            structureNumber={selectedStructureNumber}\n            setSelectedStructureNumber={setSelectedStructureNumber}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Map9;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;;;AAbA;;;;;;;;AAsBA,MAAM,OAA4B,CAAC,EACjC,IAAI,EACJ,YAAY,EACZ,kBAAkB,EACnB;;IACC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnE,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACtF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,qBAAqB;QACzB,IAAI;YACF,WAAW;YAEX,MAAM,MAAM,MAAM,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE;gBACtC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,IAAI,EAAE,EAAE;gBACX,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAiB,MAAM,IAAI,IAAI;YACrC,mBAAmB;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;QACxC,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;;0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwC;;;;;;oBACrD,SAAS,yBACR,6LAAC,wJAAA,CAAA,UAAY;wBACX,cAAc;wBACd,oBAAoB;;;;;6CAGtB,6LAAC,2JAAA,CAAA,UAAe;wBACd,cAAc;wBACd,oBAAoB;;;;;;kCAGxB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,uHAAA,CAAA,UAAM;4BACL,SAAS;4BACT,OAAO,UAAU,eAAe;;;;;;;;;;;;;;;;;0BAKtC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+HAAA,CAAA,UAAM;wBAAC,SAAS;;;;;;kCACjB,6LAAC,mIAAA,CAAA,UAAU;wBAAC,SAAS;wBAAiB,4BAA4B;;;;;;oBACjE,yCACC,6LAAC,qJAAA,CAAA,UAAU;wBACT,iBAAiB;wBACjB,4BAA4B;;;;;;;;;;;;;;;;;;AAMxC;GArEM;KAAA;uCAuES"}},
    {"offset": {"line": 2238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2244, "column": 0}, "map": {"version":3,"sources":["file:///Users/ahmadhawamdah/Documents/map9/src/app/%28dashboard%29/bridge/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport Map9 from \"@/components/Map9\";\nimport { FilterBridgesParams } from \"../../../../typing\";\n\nconst BridgeDashboard: React.FC = () => {\n  const [bridgeFilterParams, setBridgeFilterParams] = useState<FilterBridgesParams>({\n    location: \"\",\n    yearBuilt: { min: 1967, max: 2024 },\n    yearReconstructed: { min: 0, max: 2024 },\n    fedAgency: \"\",\n    serviceOn: 0,\n    routePrefix: 0,\n  });\n\n  const handleFilterChange = (key: string, value: any) => {\n    setBridgeFilterParams((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  return (\n    <div>\n      <Map9\n        type=\"bridge\"\n        filterParams={bridgeFilterParams}\n        handleFilterChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n\nexport default BridgeDashboard;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAMA,MAAM,kBAA4B;;IAChC,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;QAChF,UAAU;QACV,WAAW;YAAE,KAAK;YAAM,KAAK;QAAK;QAClC,mBAAmB;YAAE,KAAK;YAAG,KAAK;QAAK;QACvC,WAAW;QACX,WAAW;QACX,aAAa;IACf;IAEA,MAAM,qBAAqB,CAAC,KAAa;QACvC,sBAAsB,CAAC,OAAS,CAAC;gBAC/B,GAAG,IAAI;gBACP,CAAC,IAAI,EAAE;YACT,CAAC;IACH;IAEA,qBACE,6LAAC;kBACC,cAAA,6LAAC,6HAAA,CAAA,UAAI;YACH,MAAK;YACL,cAAc;YACd,oBAAoB;;;;;;;;;;;AAI5B;GA1BM;KAAA;uCA4BS"}},
    {"offset": {"line": 2301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}